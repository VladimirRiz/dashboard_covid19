{"version":3,"sources":["webpack://dashboard-covid-19/./src/scss/style.scss","webpack://dashboard-covid-19/./src/js/index.js","webpack://dashboard-covid-19/webpack/bootstrap","webpack://dashboard-covid-19/webpack/runtime/make namespace object","webpack://dashboard-covid-19/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;ACAA;AACA;;AAEA;AACA;AACA;AACA,CAAC,C;;;;;;UCND;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA;UACA","file":"./js/bundle.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","const navList = document.querySelector('.navigation_list');\nconst navButton = document.querySelector('.navigation_button');\n\nnavButton.addEventListener('click', () => {\n    navButton.classList.toggle('change');\n    navList.classList.toggle('active');\n})","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/js/index.js\");\n__webpack_require__(\"./src/scss/style.scss\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}